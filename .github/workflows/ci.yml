name: Rytass Utils CI

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      has-affected: ${{ steps.affected.outputs.hasAffected }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Check affected projects
        id: affected
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE=${{ github.event.pull_request.base.sha }}
          else
            BASE=${{ github.event.before }}
          fi
          
          if nx show projects --affected --base="$BASE" --head=HEAD | grep -q .; then
            echo "hasAffected=true" >> $GITHUB_OUTPUT
          else
            echo "hasAffected=false" >> $GITHUB_OUTPUT
          fi

  lint:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.has-affected == 'true'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Lint affected projects
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE=${{ github.event.pull_request.base.sha }}
          else
            BASE=${{ github.event.before }}
          fi
          nx affected -t lint --base="$BASE" --head=HEAD --parallel=3 --exclude=root

  test:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.has-affected == 'true'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Run tests with affected strategy
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE=${{ github.event.pull_request.base.sha }}
          else
            BASE=${{ github.event.before }}
          fi
          
          # Check if any source files are affected, if so run all tests
          if nx show projects --affected --base="$BASE" --head=HEAD --with-target=test | grep -q .; then
            echo "Running affected tests..."
            nx run root:test
          else
            echo "No test-related changes detected, skipping tests"
          fi

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests

  build:
    runs-on: ubuntu-latest
    needs: [setup, lint, test]
    if: needs.setup.outputs.has-affected == 'true'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build affected projects
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE=${{ github.event.pull_request.base.sha }}
          else
            BASE=${{ github.event.before }}
          fi
          nx affected -t build --base="$BASE" --head=HEAD --parallel=4 --exclude=root

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            packages/*/lib
          key: build-${{ github.sha }}
          restore-keys: |
            build-

  security-audit:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Run security audit
        run: yarn audit --level moderate

      - name: Check for outdated packages
        run: yarn outdated --check || true
