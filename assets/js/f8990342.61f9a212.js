"use strict";(self.webpackChunkrytass=self.webpackChunkrytass||[]).push([[386],{564:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=s(4848),r=s(8453);const o={sidebar_position:1},d="Configuration",i={id:"cms-base-nestjs-module/configuration",title:"Configuration",description:"This is a NestJS module that serves as the core of a content management platform, supporting basic features such as article versioning and categorization. The storage of article content uses Quadrats as the core storage system and requires TypeORM for database interfacing. Of course, you are free to define the necessary Entity Columns on all stored tables.",source:"@site/docs/cms-base-nestjs-module/configuration.md",sourceDirName:"cms-base-nestjs-module",slug:"/cms-base-nestjs-module/configuration",permalink:"/docs/cms-base-nestjs-module/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/Rytass/Utils/tree/main/docs/docs/cms-base-nestjs-module/configuration.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"CMS Base NestJS Module",permalink:"/docs/category/cms-base-nestjs-module"},next:{title:"ArticleBaseService",permalink:"/docs/cms-base-nestjs-module/article-base-service"}},c={},l=[{value:"References",id:"references",level:2},{value:"Methods",id:"methods",level:3},{value:"<code>forRoot()</code>",id:"forroot",level:4},{value:"<code>forRootAsync()</code>",id:"forrootasync",level:4}];function a(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,n.jsx)(t.p,{children:"This is a NestJS module that serves as the core of a content management platform, supporting basic features such as article versioning and categorization. The storage of article content uses Quadrats as the core storage system and requires TypeORM for database interfacing. Of course, you are free to define the necessary Entity Columns on all stored tables."}),"\n",(0,n.jsxs)(t.p,{children:["First, you need to configure it using ",(0,n.jsx)(t.code,{children:"forRoot"})," in your root module. If you need to pre-load other modules, ",(0,n.jsx)(t.code,{children:"forRootAsync"})," might be your choice."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",metastring:'title="src/app.module.ts"',children:"import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CMSBaseModule } from '@rytass/cms-base-nestjs-module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'localhost',\n      username: 'cms',\n      password: 'password',\n      database: 'cms',\n      schema: 'cms',\n      synchronize: true,\n      autoLoadEntities: true,\n      uuidExtension: 'uuid-ossp',\n    }),\n    CMSBaseModule.forRoot(),\n  ],\n})\nexport class AppModule {}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,n.jsx)(t.h3,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h4,{id:"forroot",children:(0,n.jsx)(t.code,{children:"forRoot()"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"static forRoot(options?: CMSBaseModuleOptionsDto);\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Default"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"multipleLanguageMode"}),(0,n.jsx)(t.td,{children:"boolean"}),(0,n.jsx)(t.td,{children:"false"}),(0,n.jsx)(t.td,{children:"Enable multiple language support"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"allowMultipleParentCategories"}),(0,n.jsx)(t.td,{children:"boolean"}),(0,n.jsx)(t.td,{children:"false"}),(0,n.jsx)(t.td,{children:"Allow category has multiple parent categories"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"allowCircularCategories"}),(0,n.jsx)(t.td,{children:"boolean"}),(0,n.jsx)(t.td,{children:"false"}),(0,n.jsx)(t.td,{children:"Allow category parent loop hierarchy"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"fullTextSearchMode"}),(0,n.jsx)(t.td,{children:"boolean"}),(0,n.jsx)(t.td,{children:"false"}),(0,n.jsx)(t.td,{children:"Search term in article content with node-rs/jieba"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"articleEntity"}),(0,n.jsx)(t.td,{children:"TypeORM Entity"}),(0,n.jsx)(t.td,{children:"undefined"}),(0,n.jsx)(t.td,{children:"Custom ArticleEntity"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"articleVersionEntity"}),(0,n.jsx)(t.td,{children:"TypeORM Entity"}),(0,n.jsx)(t.td,{children:"undefined"}),(0,n.jsx)(t.td,{children:"Custom ArticleVersionEntity"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"articleVersionContentEntity"}),(0,n.jsx)(t.td,{children:"TypeORM Entity"}),(0,n.jsx)(t.td,{children:"undefined"}),(0,n.jsx)(t.td,{children:"Custom ArticleVersionContentEntity"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"categoryEntity"}),(0,n.jsx)(t.td,{children:"TypeORM Entity"}),(0,n.jsx)(t.td,{children:"undefined"}),(0,n.jsx)(t.td,{children:"Custom CategoryEntity"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"categoryMultiLanguageNameEntity"}),(0,n.jsx)(t.td,{children:"TypeORM Entity"}),(0,n.jsx)(t.td,{children:"undefined"}),(0,n.jsx)(t.td,{children:"Custom BaseCategoryMultiLanguageNameEntity"})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"forrootasync",children:(0,n.jsx)(t.code,{children:"forRootAsync()"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"static forRootAsync(options: CMSBaseModuleAsyncOptionsDto);\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Default"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"imports"}),(0,n.jsx)(t.td,{children:"DynamicModule[]"}),(0,n.jsx)(t.td,{children:"[]"}),(0,n.jsx)(t.td,{children:"Imported module before CMS module"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"useFactory"}),(0,n.jsx)(t.td,{children:"(...args: any[]) => CMSBaseModuleOptionsDto"}),(0,n.jsx)(t.td,{children:"undefined"}),(0,n.jsx)(t.td,{children:"Factory method to generate async options"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"injects"}),(0,n.jsx)(t.td,{children:"any[]"}),(0,n.jsx)(t.td,{children:"[]"}),(0,n.jsx)(t.td,{children:"Inject symbol for useFactory method"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"useClass"}),(0,n.jsx)(t.td,{children:"Type<CMSBaseModuleOptionFactory>"}),(0,n.jsx)(t.td,{children:"undefined"}),(0,n.jsx)(t.td,{children:"Options provider class"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"useExisting"}),(0,n.jsx)(t.td,{children:"Type<CMSBaseModuleOptionFactory>"}),(0,n.jsx)(t.td,{children:"undefined"}),(0,n.jsx)(t.td,{children:"Options provider class symbol"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>i});var n=s(6540);const r={},o=n.createContext(r);function d(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);