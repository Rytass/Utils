"use strict";(self.webpackChunkrytass=self.webpackChunkrytass||[]).push([[485],{3795:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var s=n(4848),i=n(8453);const r={sidebar_position:3},o="Customize Entities",c={id:"cms-base-nestjs-module/custom-entity",title:"Customize Entities",description:"You can extend the fields of articles and categories through the TypeORM ChildEntity mechanism. Below, we provide some examples to illustrate how to add a boolean field when you want to record whether an article should be published.",source:"@site/docs/cms-base-nestjs-module/custom-entity.md",sourceDirName:"cms-base-nestjs-module",slug:"/cms-base-nestjs-module/custom-entity",permalink:"/docs/cms-base-nestjs-module/custom-entity",draft:!1,unlisted:!1,editUrl:"https://github.com/Rytass/Utils/tree/main/docs/docs/cms-base-nestjs-module/custom-entity.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"ArticleBaseService",permalink:"/docs/cms-base-nestjs-module/article-base-service"}},l={},a=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"customize-entities",children:"Customize Entities"})}),"\n",(0,s.jsxs)(t.p,{children:["You can extend the fields of articles and categories through the ",(0,s.jsx)(t.strong,{children:"TypeORM ChildEntity"})," mechanism. Below, we provide some examples to illustrate how to add a boolean field when you want to record whether an article should be published."]}),"\n",(0,s.jsxs)(t.p,{children:["First, you need to create an ",(0,s.jsx)(t.strong,{children:"Entity"})," that extends from ",(0,s.jsx)(t.strong,{children:"BaseArticleEntity"})," and add an ",(0,s.jsx)(t.strong,{children:"onShelf"})," field to it."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:'title="src/article.entity.ts"',children:"import { ChildEntity } from 'typeorm';\nimport { BaseArticleEntity } from '@rytass/cms-base-nestjs-module';\n\n@ChildEntity()\nexport class ArticleEntity extends BaseArticleEntity {\n  @Column('boolean', { default: true })\n  onShelf: boolean;\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Next, you need to register this ",(0,s.jsx)(t.strong,{children:"entity"})," in the ",(0,s.jsx)(t.strong,{children:"forRoot"})," method."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:'title="src/app.module.ts"',children:"import { Module } from '@nestjs/common';\nimport { CMSBaseModule } from '@rytass/cms-base-nestjs-module';\nimport { ArticleEntity } from './article.entity';\n\n@Module({\n  imports: [\n    // ... (typeorm register)\n    CMSBaseModule.forRoot({\n      articleEntity: ArticleEntity,\n    }),\n  ],\n})\nexport class AppModule {}\n\n"})}),"\n",(0,s.jsxs)(t.p,{children:["After all, when you use ",(0,s.jsx)(t.strong,{children:"ArticleBaseService"}),", you can access these custom-defined columns. Remember, You need to inform the ",(0,s.jsx)(t.strong,{children:"service"})," of how you\u2019ve defined it through ",(0,s.jsx)(t.strong,{children:"generics"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:'title="src/app.service.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { ArticleEntity } from './article.entity';\nimport { ArticleBaseService, ArticleBaseDto } from '@rytass/cms-base-nestjs-module';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private readonly articleService: ArticleBaseService<ArticleEntity>,\n  ) {}\n\n  findById(id: string): Promise<ArticleBaseDto<ArticleEntity>> {\n    return this.articleService.findById(id);\n  }\n}\n\n"})}),"\n",(0,s.jsxs)(t.p,{children:["In addition to defining the ",(0,s.jsx)(t.strong,{children:"generic"})," when the ",(0,s.jsx)(t.strong,{children:"Service"})," is referenced, you can also override the definition when using a ",(0,s.jsx)(t.strong,{children:"method"}),". In this case, the definition provided in the method will take precedence."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:'title="src/app.service.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { ArticleEntity } from './article.entity';\nimport { ArticleBaseService, ArticleBaseDto } from '@rytass/cms-base-nestjs-module';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private readonly articleService: ArticleBaseService,\n  ) {}\n\n  findById(id: string): Promise<ArticleBaseDto<ArticleEntity>> {\n    return this.articleService.findById<ArticleEntity>(id);\n  }\n}\n\n"})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);