# @rytass/wms-base-nestjs-module

> Enterprise-grade warehouse management system module for NestJS applications. Provides comprehensive inventory tracking, location management, batch processing, and stock control with support for custom entity extensions and hierarchical warehouse organization.

## Documentation

- [README.md](README.md): Comprehensive documentation with installation, usage examples, and API reference
- [Package Configuration](package.json): Package metadata, version, dependencies, and build scripts
- [Main API](src/index.ts): Complete exported API surface including services, entities, and types

## Core Services

- [LocationService](src/services/location.service.ts): Hierarchical warehouse location management with materialized path trees
- [StockService](src/services/stock.service.ts): Real-time inventory tracking, stock queries, and transaction history
- [OrderService](src/services/order.service.ts): Order processing with batch management and custom order types
- [MaterialService](src/services/material.service.ts): Product/SKU management and material master data

## Entity Models

- [Location Entity](src/models/location.entity.ts): Warehouse location hierarchy with custom field support
- [Stock Entity](src/models/stock.entity.ts): Inventory levels and stock movement tracking
- [Order Entity](src/models/order.entity.ts): Order processing with extensible order types
- [Material Entity](src/models/material.entity.ts): Product master data management
- [Batch Entity](src/models/batch.entity.ts): Batch and lot tracking for inventory traceability

## Configuration & Types

- [Module Options](src/typings/wms-base-module-options.interface.ts): Configuration interface for allowNegativeStock and custom entities
- [Stock DTOs](src/typings/stock-find.dto.ts): Query options for stock filtering, sorting, and location matching
- [Error Handling](src/constants/errors/base.error.ts): Specific error classes for stock, location, and validation issues

## Testing & Examples

- [Stock Service Tests](__tests__/stock.spec.ts): Comprehensive test coverage showing stock management patterns
- [Order Service Tests](__tests__/order.spec.ts): Order processing examples with batch handling and custom entities
- [Location Service Tests](__tests__/location.spec.ts): Location hierarchy and archive/unarchive workflows
- [Module Configuration Tests](__tests__/wms-base.module.spec.ts): NestJS module setup with custom entities and options

## Key Features

The module supports hierarchical warehouse locations, real-time inventory tracking, customizable entity extensions, transaction-safe operations, negative stock handling for pre-orders, and comprehensive stock querying with location descendant support. Built for NestJS with TypeORM integration.